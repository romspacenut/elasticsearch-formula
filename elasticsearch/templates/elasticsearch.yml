{% from "elasticsearch/map.jinja" import elasticsearch with context %}

{%- if elasticsearch.network is defined %}
{%- for key, value in elasticsearch.network.iteritems() %}
network.{{ key }}: {{ value }}
{%- endfor %}
{%- endif %}
path.data: {{ elasticsearch.data_path }}
path.logs: {{ elasticsearch.logs_path }}

{%- if elasticsearch.clusterunicast %}
discovery.zen.ping.multicast.enabled: false
{%- set addrs = salt['pillar.get']('elasticsearch:clustersearch', []) %}
{%- if addrs %}
discovery.zen.ping.unicast.hosts:
{%- for host in addrs %}
  - {{ host }}
{%- endfor %}
{%- endif %}
{%- endif %}

{%- if elasticsearch.cluster_name %}
cluster.name: {{ elasticsearch.cluster_name }}
{%- endif %}
{%- if elasticsearch.node_name %}
node.name: {{ elasticsearch.node_name }}
{%- endif %}
{%- if elasticsearch.fielddata_cache_size %}
indices.fielddata.cache.size: {{ elasticsearch.fielddata_cache_size }}
{%- endif %}
{%- if elasticsearch.fielddata_cache_expire %}
indices.fielddata.cache.expire: {{ elasticsearch.fielddata_cache_expire }}
{%- endif %}

{%- if elasticsearch.node_master %}
# Every node can be configured to allow or deny being eligible as the master,
# and to allow or deny to store the data.
#
# Allow this node to be eligible as a master node (enabled by default):
#
node.master: {{ elasticsearch.node_master }}
{% endif %}
{%- if elasticsearch.node_data %}
#
# Allow this node to store data (enabled by default):
#
node.data: {{ elasticsearch.node_data }}
{% endif %}
{%- if elasticsearch.index_number_of_shards %}
# Set the number of shards (splits) of an index (5 by default):
#
index.number_of_shards: {{ elasticsearch.index_number_of_shards }}
{% endif %}
{%- if elasticsearch.index_number_of_replicas %}
# Set the number of replicas (additional copies) of an index (1 by default):
#
index.number_of_replicas: {{ elasticsearch.index_number_of_replicas }}
{% endif %}